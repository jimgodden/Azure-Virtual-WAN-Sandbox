{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "15110918246429092153"
    }
  },
  "parameters": {
    "location_A": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Datacenter location that the main resouces will be deployed to."
      }
    },
    "location_B": {
      "type": "string",
      "metadata": {
        "description": "Secondary Azure Datacenter location that some of the resouces will be deployed to."
      }
    },
    "VWAN_Name": {
      "type": "string",
      "defaultValue": "vwan",
      "metadata": {
        "description": "Name of the Virtual WAN resource"
      }
    },
    "vHub_Name": {
      "type": "string",
      "defaultValue": "vhub_A",
      "metadata": {
        "description": "Name of the first Virtual Hub within the Virtual WAN"
      }
    },
    "vHub_AddressPrefix": {
      "type": "string",
      "defaultValue": "10.10.0.0/16",
      "metadata": {
        "description": "Address Prefix of the first Virtual Hub"
      }
    },
    "second_vHub": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set to true if you want a second vHub in another region"
      }
    },
    "vHub_B_Name": {
      "type": "string",
      "defaultValue": "vhub_B",
      "metadata": {
        "description": "Name of the second Virtual Hub within the Virtual WAN"
      }
    },
    "vHub_B_AddressPrefix": {
      "type": "string",
      "defaultValue": "10.20.0.0/16",
      "metadata": {
        "description": "Address Prefix of the second Virtual Hub"
      }
    },
    "AzFW_Name": {
      "type": "string",
      "defaultValue": "AzFW",
      "metadata": {
        "description": "Name of the Azure Firewall within the vHub A"
      }
    },
    "AzFW_SKU": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
      }
    },
    "AzFWPolicy_Name": {
      "type": "string",
      "defaultValue": "AzFW_Policy",
      "metadata": {
        "description": "Name of the Azure Firewall Policy"
      }
    },
    "AzureVNG_Name": {
      "type": "string",
      "defaultValue": "vng",
      "metadata": {
        "description": "Name of the Azure Virtual Network Gateway in vHub A"
      }
    },
    "vnet_Iteration": {
      "type": "int",
      "defaultValue": 1,
      "maxValue": 9,
      "minValue": 1,
      "metadata": {
        "description": "Current Virtual Network Iteration"
      }
    },
    "vnet_Name": {
      "type": "string",
      "defaultValue": "[format('vnet{0}', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "vnet_AddressPrefix": {
      "type": "string",
      "defaultValue": "[format('10.5{0}.0.0/16', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Address Prefix of the Virtual Network"
      }
    },
    "subnet_Name": {
      "type": "string",
      "defaultValue": "[format('subnet{0}', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Name of the Virtual Network"
      }
    },
    "subnet_AddressPrefix": {
      "type": "string",
      "defaultValue": "[format('10.5{0}.0.0/24', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Address Prefix of the Subnet"
      }
    },
    "defaultNSG_Name": {
      "type": "string",
      "defaultValue": "Default_NSG",
      "metadata": {
        "description": "Name of the Network Security Group"
      }
    },
    "defaultNSG_RuleName": {
      "type": "string",
      "defaultValue": "[format('rule{0}', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Name of the Network Security Group Rule"
      }
    },
    "defaultNSG_RulePriority": {
      "type": "string",
      "defaultValue": "[format('10{0}', parameters('vnet_Iteration'))]",
      "metadata": {
        "description": "Name of the Network Security Group Rule"
      }
    },
    "vm_Name": {
      "type": "string",
      "defaultValue": "testvm1",
      "metadata": {
        "description": "Name of the Virtual Machine"
      }
    },
    "vm_AdminUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin Username for the Virtual Machine"
      }
    },
    "vm_AdminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine Admin User"
      }
    },
    "nic_Name": {
      "type": "string",
      "defaultValue": "[format('{0}_nic1', parameters('vm_Name'))]",
      "metadata": {
        "description": "Name of the Virtual Machines Network Interface"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualWans",
      "apiVersion": "2022-07-01",
      "name": "[parameters('VWAN_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "disableVpnEncryption": false,
        "allowBranchToBranchTraffic": true,
        "type": "Standard"
      }
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2022-07-01",
      "name": "[parameters('vHub_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "addressPrefix": "[parameters('vHub_AddressPrefix')]",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
        },
        "allowBranchToBranchTraffic": false,
        "hubRoutingPreference": "VpnGateway"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('vHub_Name'), 'testhubconn1')]",
      "properties": {
        "routingConfiguration": {
          "associatedRouteTable": {
            "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
          },
          "propagatedRouteTables": {
            "labels": [
              "default"
            ],
            "ids": [
              {
                "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
              }
            ]
          },
          "vnetRoutes": {
            "staticRoutes": [],
            "staticRoutesConfig": {
              "vnetLocalRouteOverrideCriteria": "Contains"
            }
          }
        },
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
        },
        "allowHubToRemoteVnetTransit": true,
        "allowRemoteVnetToUseHubVnetGateways": true,
        "enableInternetSecurity": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/vpnGateways', parameters('AzureVNG_Name'))]",
        "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]",
        "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', parameters('vHub_Name'), 'defaultRouteTable')]",
      "properties": {
        "routes": [],
        "labels": [
          "default"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs/hubRouteTables",
      "apiVersion": "2022-07-01",
      "name": "[format('{0}/{1}', parameters('vHub_Name'), 'noneRouteTable')]",
      "properties": {
        "routes": [],
        "labels": [
          "none"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/vpnGateways",
      "apiVersion": "2022-07-01",
      "name": "[parameters('AzureVNG_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "connections": [],
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
        },
        "vpnGatewayScaleUnit": 1,
        "natRules": [],
        "enableBgpRouteTranslationForNat": false,
        "isRoutingPreferenceInternet": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/firewallPolicies",
      "apiVersion": "2022-07-01",
      "name": "[parameters('AzFWPolicy_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "sku": {
          "tier": "[parameters('AzFW_SKU')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/azureFirewalls",
      "apiVersion": "2022-07-01",
      "name": "[parameters('AzFW_Name')]",
      "location": "[parameters('location_A')]",
      "zones": [
        "1",
        "2",
        "3"
      ],
      "properties": {
        "sku": {
          "name": "AzFW_Hub",
          "tier": "[parameters('AzFW_SKU')]"
        },
        "additionalProperties": {},
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
        },
        "hubIPAddresses": {
          "publicIPs": {
            "count": 1
          }
        },
        "firewallPolicy": {
          "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]",
        "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "[parameters('vnet_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnet_AddressPrefix')]"
          ]
        },
        "enableDdosProtection": false
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('vnet_Name'), parameters('subnet_Name'))]",
      "properties": {
        "addressPrefix": "[parameters('subnet_AddressPrefix')]",
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
        },
        "delegations": [],
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2022-09-01",
      "name": "[parameters('defaultNSG_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}/{1}', parameters('defaultNSG_Name'), parameters('defaultNSG_RuleName'))]",
      "properties": {
        "description": "test",
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "8080",
        "sourceAddressPrefix": "10.0.0.1/32",
        "destinationAddressPrefix": "[format('10.5{0}.0.4', parameters('vnet_Iteration'))]",
        "access": "Allow",
        "priority": "[int(parameters('defaultNSG_RulePriority'))]",
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-09-01",
      "name": "[parameters('nic_Name')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": false,
        "enableIPForwarding": false,
        "disableTcpStateTracking": false,
        "nicType": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2022-11-01",
      "name": "[parameters('vm_Name')]",
      "location": "[parameters('location_A')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2ms"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', parameters('vm_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[parameters('vm_Name')]",
          "adminUsername": "[parameters('vm_AdminUserName')]",
          "adminPassword": "[parameters('vm_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByOS",
              "assessmentMode": "ImageDefault",
              "enableHotpatching": false
            },
            "enableVMAgentPlatformUpdates": false
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2022-11-01",
      "name": "[format('{0}/{1}', parameters('vm_Name'), 'AzureNetworkWatcherExtension')]",
      "location": "[parameters('location_A')]",
      "properties": {
        "autoUpgradeMinorVersion": true,
        "publisher": "Microsoft.Azure.NetworkWatcher",
        "type": "NetworkWatcherAgentWindows",
        "typeHandlerVersion": "1.4"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm_Name'))]"
      ]
    }
  ]
}