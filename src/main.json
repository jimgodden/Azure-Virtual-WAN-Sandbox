{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.6.18.56646",
      "templateHash": "10092788815958002074"
    }
  },
  "parameters": {
    "mainLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure Datacenter location that the main resouces will be deployed to."
      }
    },
    "multiRegion": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Deploys a vHub in another location for multi region connectivity"
      }
    },
    "branchLocation": {
      "type": "string",
      "defaultValue": "westus2",
      "metadata": {
        "description": "Azure Datacenter location that the branch resouces will be deployed to."
      }
    },
    "VWAN_Name": {
      "type": "string",
      "defaultValue": "vwan",
      "metadata": {
        "description": "Name of the Virtual WAN resource"
      }
    },
    "vm_AdminUserName": {
      "type": "string",
      "metadata": {
        "description": "Admin Username for the Virtual Machine"
      }
    },
    "vm_AdminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine Admin User"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualWans",
      "apiVersion": "2022-07-01",
      "name": "[parameters('VWAN_Name')]",
      "location": "[parameters('mainLocation')]",
      "properties": {
        "disableVpnEncryption": false,
        "allowBranchToBranchTraffic": true,
        "type": "Standard"
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "mainHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('mainLocation')]"
          },
          "vwanID": {
            "value": "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
          },
          "vm_AdminUserName": {
            "value": "[parameters('vm_AdminUserName')]"
          },
          "vm_AdminPassword": {
            "value": "[parameters('vm_AdminPassword')]"
          },
          "vHub_Iteration": {
            "value": 1
          },
          "usingVPN": {
            "value": true
          },
          "usingAzFW": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "5076755728928261664"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "vwanID": {
              "type": "string",
              "metadata": {
                "description": "ID of the existing VWAN"
              }
            },
            "vHub_Iteration": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 9,
              "minValue": 1,
              "metadata": {
                "description": "Current vHub Iteration"
              }
            },
            "vHub_Name": {
              "type": "string",
              "defaultValue": "[format('vhub{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the first Virtual Hub within the Virtual WAN"
              }
            },
            "vHub_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}0.0.0/16', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the first Virtual Hub"
              }
            },
            "usingAzFW": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Deploys a Az FW if true"
              }
            },
            "AzFW_Name": {
              "type": "string",
              "defaultValue": "[format('AzFW{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Firewall within the vHub A"
              }
            },
            "AzFW_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
              }
            },
            "AzFWPolicy_Name": {
              "type": "string",
              "defaultValue": "[format('AzFW_Policy{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Firewall Policy"
              }
            },
            "usingVPN": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Deploys a S2S VPN if true"
              }
            },
            "AzureVNG_Name": {
              "type": "string",
              "defaultValue": "[format('vng{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway in vHub A"
              }
            },
            "vnet_Iteration": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 9,
              "minValue": 1,
              "metadata": {
                "description": "Current Virtual Network Iteration"
              }
            },
            "vnet_Name": {
              "type": "string",
              "defaultValue": "[format('vnet_{0}_{1}', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "vnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}{1}.0.0/16', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "subnet_Name": {
              "type": "string",
              "defaultValue": "[format('subnet{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "subnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}{1}.0.0/24', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the Subnet"
              }
            },
            "defaultNSG_Name": {
              "type": "string",
              "defaultValue": "[format('Default_NSG{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group"
              }
            },
            "defaultNSG_RuleName": {
              "type": "string",
              "defaultValue": "[format('rule{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group Rule"
              }
            },
            "defaultNSG_RulePriority": {
              "type": "string",
              "defaultValue": "[format('10{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group Rule"
              }
            },
            "vm_Name": {
              "type": "string",
              "defaultValue": "[format('testvm{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "vm_AdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "vm_AdminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "nic_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_nic1', parameters('vm_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "vm_ScriptFileUri": {
              "type": "string",
              "defaultValue": "https://raw.githubusercontent.com/jimgodden/Azure-Virtual-WAN-Sandbox/main/scripts/InitScript.ps1"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualHubs",
              "apiVersion": "2022-07-01",
              "name": "[parameters('vHub_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressPrefix": "[parameters('vHub_AddressPrefix')]",
                "virtualWan": {
                  "id": "[parameters('vwanID')]"
                },
                "allowBranchToBranchTraffic": false,
                "hubRoutingPreference": "VpnGateway"
              }
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), format('{0}_to_{1}', parameters('vHub_Name'), parameters('vnet_Name')))]",
              "properties": {
                "routingConfiguration": {
                  "associatedRouteTable": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
                  },
                  "propagatedRouteTables": {
                    "labels": [
                      "default"
                    ],
                    "ids": [
                      {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
                      }
                    ]
                  },
                  "vnetRoutes": {
                    "staticRoutes": [],
                    "staticRoutesConfig": {
                      "vnetLocalRouteOverrideCriteria": "Contains"
                    }
                  }
                },
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), 'defaultRouteTable')]",
              "properties": {
                "routes": [],
                "labels": [
                  "default"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), 'noneRouteTable')]",
              "properties": {
                "routes": [],
                "labels": [
                  "none"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "condition": "[parameters('usingVPN')]",
              "type": "Microsoft.Network/vpnGateways",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzureVNG_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "connections": [],
                "virtualHub": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
                },
                "vpnGatewayScaleUnit": 1,
                "natRules": [],
                "enableBgpRouteTranslationForNat": false,
                "isRoutingPreferenceInternet": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "condition": "[parameters('usingAzFW')]",
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzFWPolicy_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "tier": "[parameters('AzFW_SKU')]"
                }
              }
            },
            {
              "condition": "[parameters('usingAzFW')]",
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzFW_Name')]",
              "location": "[parameters('location')]",
              "zones": [
                "1",
                "2",
                "3"
              ],
              "properties": {
                "sku": {
                  "name": "AzFW_Hub",
                  "tier": "[parameters('AzFW_SKU')]"
                },
                "additionalProperties": {},
                "virtualHub": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
                },
                "hubIPAddresses": {
                  "publicIPs": {
                    "count": 1
                  }
                },
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('vnet_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnet_AddressPrefix')]"
                  ]
                },
                "enableDdosProtection": false
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('vnet_Name'), parameters('subnet_Name'))]",
              "properties": {
                "addressPrefix": "[parameters('subnet_AddressPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('defaultNSG_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('defaultNSG_Name'), parameters('defaultNSG_RuleName'))]",
              "properties": {
                "description": "test",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "10.0.0.1/32",
                "destinationAddressPrefix": "[format('10.5{0}.0.4', parameters('vnet_Iteration'))]",
                "access": "Allow",
                "priority": "[int(parameters('defaultNSG_RulePriority'))]",
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-09-01",
              "name": "[parameters('nic_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vm_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('vm_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('vm_Name')]",
                  "adminUsername": "[parameters('vm_AdminUserName')]",
                  "adminPassword": "[parameters('vm_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('vm_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vm_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows VM"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[parameters('vm_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File InitScript.ps1"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm_Name'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
      ]
    },
    {
      "condition": "[parameters('multiRegion')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "branchHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('branchLocation')]"
          },
          "vwanID": {
            "value": "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
          },
          "vm_AdminUserName": {
            "value": "[parameters('vm_AdminUserName')]"
          },
          "vm_AdminPassword": {
            "value": "[parameters('vm_AdminPassword')]"
          },
          "vHub_Iteration": {
            "value": 2
          },
          "usingVPN": {
            "value": false
          },
          "usingAzFW": {
            "value": false
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.6.18.56646",
              "templateHash": "5076755728928261664"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "vwanID": {
              "type": "string",
              "metadata": {
                "description": "ID of the existing VWAN"
              }
            },
            "vHub_Iteration": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 9,
              "minValue": 1,
              "metadata": {
                "description": "Current vHub Iteration"
              }
            },
            "vHub_Name": {
              "type": "string",
              "defaultValue": "[format('vhub{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the first Virtual Hub within the Virtual WAN"
              }
            },
            "vHub_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}0.0.0/16', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the first Virtual Hub"
              }
            },
            "usingAzFW": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Deploys a Az FW if true"
              }
            },
            "AzFW_Name": {
              "type": "string",
              "defaultValue": "[format('AzFW{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Firewall within the vHub A"
              }
            },
            "AzFW_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
              }
            },
            "AzFWPolicy_Name": {
              "type": "string",
              "defaultValue": "[format('AzFW_Policy{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Firewall Policy"
              }
            },
            "usingVPN": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Deploys a S2S VPN if true"
              }
            },
            "AzureVNG_Name": {
              "type": "string",
              "defaultValue": "[format('vng{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Azure Virtual Network Gateway in vHub A"
              }
            },
            "vnet_Iteration": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 9,
              "minValue": 1,
              "metadata": {
                "description": "Current Virtual Network Iteration"
              }
            },
            "vnet_Name": {
              "type": "string",
              "defaultValue": "[format('vnet_{0}_{1}', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "vnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}{1}.0.0/16', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the Virtual Network"
              }
            },
            "subnet_Name": {
              "type": "string",
              "defaultValue": "[format('subnet{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "subnet_AddressPrefix": {
              "type": "string",
              "defaultValue": "[format('10.{0}{1}.0.0/24', parameters('vHub_Iteration'), parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Address Prefix of the Subnet"
              }
            },
            "defaultNSG_Name": {
              "type": "string",
              "defaultValue": "[format('Default_NSG{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group"
              }
            },
            "defaultNSG_RuleName": {
              "type": "string",
              "defaultValue": "[format('rule{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group Rule"
              }
            },
            "defaultNSG_RulePriority": {
              "type": "string",
              "defaultValue": "[format('10{0}', parameters('vnet_Iteration'))]",
              "metadata": {
                "description": "Name of the Network Security Group Rule"
              }
            },
            "vm_Name": {
              "type": "string",
              "defaultValue": "[format('testvm{0}', parameters('vHub_Iteration'))]",
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "vm_AdminUserName": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "vm_AdminPassword": {
              "type": "secureString",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "nic_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_nic1', parameters('vm_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "vm_ScriptFileUri": {
              "type": "string",
              "defaultValue": "https://raw.githubusercontent.com/jimgodden/Azure-Virtual-WAN-Sandbox/main/scripts/InitScript.ps1"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualHubs",
              "apiVersion": "2022-07-01",
              "name": "[parameters('vHub_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressPrefix": "[parameters('vHub_AddressPrefix')]",
                "virtualWan": {
                  "id": "[parameters('vwanID')]"
                },
                "allowBranchToBranchTraffic": false,
                "hubRoutingPreference": "VpnGateway"
              }
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubVirtualNetworkConnections",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), format('{0}_to_{1}', parameters('vHub_Name'), parameters('vnet_Name')))]",
              "properties": {
                "routingConfiguration": {
                  "associatedRouteTable": {
                    "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
                  },
                  "propagatedRouteTables": {
                    "labels": [
                      "default"
                    ],
                    "ids": [
                      {
                        "id": "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]"
                      }
                    ]
                  },
                  "vnetRoutes": {
                    "staticRoutes": [],
                    "staticRoutesConfig": {
                      "vnetLocalRouteOverrideCriteria": "Contains"
                    }
                  }
                },
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
                },
                "allowHubToRemoteVnetTransit": true,
                "allowRemoteVnetToUseHubVnetGateways": true,
                "enableInternetSecurity": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs/hubRouteTables', parameters('vHub_Name'), 'defaultRouteTable')]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), 'defaultRouteTable')]",
              "properties": {
                "routes": [],
                "labels": [
                  "default"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualHubs/hubRouteTables",
              "apiVersion": "2022-07-01",
              "name": "[format('{0}/{1}', parameters('vHub_Name'), 'noneRouteTable')]",
              "properties": {
                "routes": [],
                "labels": [
                  "none"
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "condition": "[parameters('usingVPN')]",
              "type": "Microsoft.Network/vpnGateways",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzureVNG_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "connections": [],
                "virtualHub": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
                },
                "vpnGatewayScaleUnit": 1,
                "natRules": [],
                "enableBgpRouteTranslationForNat": false,
                "isRoutingPreferenceInternet": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "condition": "[parameters('usingAzFW')]",
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzFWPolicy_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "tier": "[parameters('AzFW_SKU')]"
                }
              }
            },
            {
              "condition": "[parameters('usingAzFW')]",
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2022-07-01",
              "name": "[parameters('AzFW_Name')]",
              "location": "[parameters('location')]",
              "zones": [
                "1",
                "2",
                "3"
              ],
              "properties": {
                "sku": {
                  "name": "AzFW_Hub",
                  "tier": "[parameters('AzFW_SKU')]"
                },
                "additionalProperties": {},
                "virtualHub": {
                  "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
                },
                "hubIPAddresses": {
                  "publicIPs": {
                    "count": 1
                  }
                },
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('AzFWPolicy_Name'))]",
                "[resourceId('Microsoft.Network/virtualHubs', parameters('vHub_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('vnet_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vnet_AddressPrefix')]"
                  ]
                },
                "enableDdosProtection": false
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('vnet_Name'), parameters('subnet_Name'))]",
              "properties": {
                "addressPrefix": "[parameters('subnet_AddressPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('defaultNSG_Name')]",
              "location": "[parameters('location')]",
              "properties": {}
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups/securityRules",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('defaultNSG_Name'), parameters('defaultNSG_RuleName'))]",
              "properties": {
                "description": "test",
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "10.0.0.1/32",
                "destinationAddressPrefix": "[format('10.5{0}.0.4', parameters('vnet_Iteration'))]",
                "access": "Allow",
                "priority": "[int(parameters('defaultNSG_RulePriority'))]",
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('defaultNSG_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-09-01",
              "name": "[parameters('nic_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4"
                    }
                  }
                ],
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_Name'), parameters('subnet_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('vm_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "Standard_B2ms"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('vm_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('vm_Name')]",
                  "adminUsername": "[parameters('vm_AdminUserName')]",
                  "adminPassword": "[parameters('vm_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('vm_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('vm_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "tags": {
                "displayName": "install software for Windows VM"
              },
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[parameters('vm_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File InitScript.ps1"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('vm_Name'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('VWAN_Name'))]"
      ]
    }
  ]
}